#include <stdio.h>

struct Queue {
    int items[3];
    int front, rear;
};

void init(struct Queue* q) {
    q->front = -1;
    q->rear = -1;
}

void enqueue(struct Queue* q, int value) {
    if (q->rear == 2) {
        printf("Queue is full, element cannot be inserted \n");
        return;
    }
    if (q->front == -1) q->front = 0;
    q->items[++q->rear] = value;
    printf("Inserted value : %d\n", value);
}

void dequeue(struct Queue* q) {
    if (q->front == -1) {
        printf("Queue is empty\n");
        return;
    }
    printf("Removed : %d\n", q->items[q->front++]);
    if (q->front > q->rear) {
        q->front = q->rear = -1;
    }
}

void display(struct Queue* q) {
    if (q->front == -1) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue :  ");
    for (int i = q->front; i <= q->rear; i++) {
        
        printf("\t %d ", q->items[i]);
    }
    printf("\n");
}

int main() 
{
    
    struct Queue q;
    
    init(&q);

    enqueue(&q, 10);
    
    enqueue(&q, 20);
    
    enqueue(&q, 30);
    
    enqueue(&q, 40);

    dequeue(&q);
    
    display(&q);
    
    enqueue(&q, 50);
    
    display(&q);

    
    return 0;
}










